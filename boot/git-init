#!/bin/bash

MD5CHECKSUM=c076cdc2454161b81f055b445f08e26f

IV=da815a765ddaf8d54d7ce6c433db0516

#encrypt by openssl enc -d -aes-128-cfb -base64 -A -k "$passwd" -iv $IV)
CONTENT_SEC="U2FsdGVkX1+W8CmWQvhNVi3SFNO6XtzIq+fMooV1JehQePRT4lXgzFoMaV40bt0VGVLbq8l1+pYJs/ohV4+u/NfJzEV+nTsKOgPgEfm+wFDbzAfH"

#INSTALL_FILE="$HOME/.git-credentials"
INSTALL_FILE="$HOME/git-credentials"

function install()
{
	force="$1"
	read -s -p "input protect password: " passwd
	echo
	[ -z "$passwd" ] && { echo "invalid passwd!"; exit 1; }

	content=$(echo "$CONTENT_SEC" | /usr/bin/openssl enc -d -aes-128-cfb -base64 -A -k "$passwd" -iv "$IV")

	outmd5=$(echo $content | md5)
	if [ $MD5CHECKSUM == "$outmd5" ]; then 
		[ -f $INSTALL_FILE ] && {
			[ "$force" != -y ] && {
				read -p "$INSTALL_FILE is already exist, confirm continue to overwrite(y/n)? " confirm
				echo
				[ "$confirm" == y ] || return
			}
		}
		echo "$content" > "$INSTALL_FILE"
		chmod 600 "$INSTALL_FILE"
		echo "install complete!"

	else
		echo "fail, invalid password!"
	fi
}

function uninstall()
{
	force="$1"
	[ -f $INSTALL_FILE ] && {
		[ "$force" == "-y" ] || {
			read -p "$INSTALL_FILE will be delete, confirm(y/n)? " confirm
			echo
			[ "$confirm" == y ] || return
		}

		rm -f $INSTALL_FILE
	}
}

cmd=$1
shift

case "$cmd" in
	install)
		install $@
		;;
	uninstall)
		uninstall $@
		;;
	*)
		echo "Usage: $(basename $0) install | uninstall [-y]"
		;;
esac

